!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.hello_world=n():e.hello_world=n()}(window,(function(){return function(e){var n={};function r(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(module,exports){eval('looker.plugins.visualizations.add({\r\n    id: "hello_world",\r\n    label: "Hello World",\r\n    options: {\r\n      font_size: {\r\n        type: "string",\r\n        label: "Font Size",\r\n        values: [\r\n          {"Large": "large"},\r\n          {"Small": "small"}\r\n        ],\r\n        display: "radio",\r\n        default: "large"\r\n      }\r\n    },\r\n    // Set up the initial state of the visualization\r\n    create: function(element, config) {\r\n  \r\n      // Insert a <style> tag with some styles we\'ll use later.\r\n      var css = element.innerHTML = `\r\n        <style>\r\n          .hello-world-vis {\r\n            /* Vertical centering */\r\n            height: 100%;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            text-align: center;\r\n          }\r\n          .hello-world-text-large {\r\n            font-size: 72px;\r\n          }\r\n          .hello-world-text-small {\r\n            font-size: 18px;\r\n          }\r\n        </style>\r\n      `;\r\n  \r\n      // Create a container element to let us center the text.\r\n      var container = element.appendChild(document.createElement("div"));\r\n      container.className = "hello-world-vis";\r\n  \r\n      // Create an element to contain the text.\r\n      this._textElement = container.appendChild(document.createElement("div"));\r\n  \r\n    },\r\n    // Render in response to the data or settings changing\r\n    update: function(data, element, config, queryResponse) {\r\n        console.log(data);\r\n        console.log(queryResponse);\r\n  \r\n      // Clear any errors from previous updates\r\n      this.clearErrors();\r\n  \r\n      // Throw some errors and exit if the shape of the data isn\'t what this chart needs\r\n      if (queryResponse.fields.dimensions.length == 0) {\r\n        this.addError({title: "No Dimensions", message: "This chart requires dimensions."});\r\n        return;\r\n      }\r\n  \r\n      // Grab the first cell of the data\r\n      var firstRow = data[0];\r\n      var firstCell = firstRow[queryResponse.fields.dimensions[0].name];\r\n  \r\n      // Insert the data into the page\r\n      this._textElement.innerHTML = LookerCharts.Utils.htmlForCell(firstCell);\r\n  \r\n      // Set the size to the user-selected size\r\n      if (config.font_size == "small") {\r\n        this._textElement.className = "hello-world-text-small";\r\n      } else {\r\n        this._textElement.className = "hello-world-text-large";\r\n      }\r\n  \r\n    }\r\n  });\n\n//# sourceURL=webpack://%5Bname%5D/./src/visualizations/hello_world.js?')}])}));